{"version":3,"sources":["components/HeadingCard/HeadingLinks.js","components/HeadingCard/HeadingCard.js","components/ProjectCards/CommitGraph.js","components/ProjectCards/CommitGraphBox.js","components/ProjectCards/ProjectCard.js","components/ProjectCards/ProjectCards.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileButton","props","className","id","href","url","target","rel","width","height","viewBox","d","path","HeadingLinks","profiles","require","items","map","profile","HeadingCard","style","fontSize","CommitGraph","fill","diff","graphPoints","length","maxValue","i","points","x","join","stroke","strokeWidth","CommitGraphBox","useState","endDates","setEndDates","setGraphPoints","convertDay","date","Math","abs","updateGraph","data","endDate","Date","commit","author","slice","startDate","dates","prevDate","currGraphPoints","commits","reverse","forEach","newDate","Array","push","printDate","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","useEffect","a","config","headers","accept","params","per_page","axios","github_owner","github_repo","resp","fetchData","ProjectCard","project","this","name","description","tags","tag","React","Component","ProjectCards","projects","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc6b9f25.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Create array of profiles and iterate over them\r\n\r\nconst ProfileButton = props => (\r\n  <>\r\n    <div className=\"profile-col\">\r\n      <a\r\n        className=\"profile-link\"\r\n        id={props.id}\r\n        href={props.url}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\">\r\n          <path d={props.path} />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n  </>\r\n);\r\n\r\nfunction HeadingLinks() {\r\n  const profiles = require(\"./profiles.json\").items;\r\n\r\n  return (\r\n    <div id=\"heading-links\">\r\n      {profiles.map(profile => (\r\n        <ProfileButton key={profile.id} {...profile} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeadingLinks;\r\n","import React from \"react\";\r\nimport \"./HeadingCard.css\";\r\nimport HeadingLinks from \"./HeadingLinks\";\r\n\r\nfunction HeadingCard() {\r\n  return (\r\n    <>\r\n      <div id=\"heading-card\">\r\n        <div id=\"heading-title\">\r\n          <div style={{ fontSize: \"50px\" }}>Coding Portfolio</div>\r\n          <div style={{ fontSize: \"30px\" }}>Ben Leong</div>\r\n        </div>\r\n      </div>\r\n      <HeadingLinks />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeadingCard;\r\n","import React from \"react\";\r\n\r\nfunction CommitGraph(props) {\r\n  const fill = \"none\";\r\n  const stroke = \"black\";\r\n  const strokeWidth = 2;\r\n\r\n  const width = 380;\r\n  const height = 240;\r\n  const diff = width / props.graphPoints.length;\r\n  const maxValue = props.graphPoints[props.graphPoints.length - 1];\r\n  var i = -diff / 2;\r\n\r\n  const finalPoint =\r\n    fill !== \"none\" ? \" \" + (width - diff / 2) + \",\" + height : \"\";\r\n  const points =\r\n    props.graphPoints\r\n      .map(x => [(i += diff), (height / maxValue) * (maxValue - x)])\r\n      .join(\" \") + finalPoint;\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`}>\r\n      <polyline\r\n        points={points}\r\n        fill={fill}\r\n        stroke={stroke}\r\n        strokeWidth={strokeWidth}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CommitGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport CommitGraph from \"./CommitGraph\";\r\n\r\nfunction CommitGraphBox(props) {\r\n  // const [state, setState] = useState(0);\r\n  const [endDates, setEndDates] = useState([0, 0]);\r\n  const [graphPoints, setGraphPoints] = useState([0]);\r\n\r\n  const convertDay = date => {\r\n    return Math.abs(date) / 86400000 - 18500;\r\n  };\r\n\r\n  const updateGraph = data => {\r\n    const endDate = new Date(data[0].commit.author.date.slice(0, 10));\r\n    const startDate = new Date(\r\n      data[data.length - 1].commit.author.date.slice(0, 10)\r\n    );\r\n    setEndDates([startDate, endDate]);\r\n\r\n    const dates = data.map(\r\n      commit => new Date(commit.commit.author.date.slice(0, 10))\r\n    );\r\n    var prevDate = convertDay(startDate) - 1;\r\n\r\n    var currGraphPoints = [];\r\n    var commits = 0;\r\n\r\n    dates\r\n      .slice()\r\n      .reverse()\r\n      .forEach(date => {\r\n        var newDate = convertDay(date);\r\n        if (newDate === prevDate) {\r\n          commits++;\r\n        } else {\r\n          currGraphPoints = [\r\n            ...currGraphPoints,\r\n            ...Array(newDate - prevDate).fill(commits)\r\n          ];\r\n          commits++;\r\n        }\r\n        prevDate = newDate;\r\n      });\r\n    currGraphPoints.push(commits);\r\n    // currGraphPoints[n] = cum. number of commits up to day n after creation\r\n\r\n    setGraphPoints(currGraphPoints);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let config = {\r\n        headers: {\r\n          accept: \"application/vnd.github.v3+json\"\r\n        },\r\n        params: {\r\n          per_page: 100\r\n        }\r\n      };\r\n      const resp = await axios.get(\r\n        `https://api.github.com/repos/${props.github_owner}/${props.github_repo}/commits`,\r\n        config\r\n      );\r\n      // setState(resp.data);\r\n      updateGraph(resp.data);\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function printDate(d) {\r\n    const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\r\n    const mo = new Intl.DateTimeFormat(\"en\", { month: \"2-digit\" }).format(d);\r\n    const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\r\n    return `${ye}/${mo}/${da}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-graph\">\r\n      <CommitGraph graphPoints={graphPoints} />\r\n      <div className=\"project-graph-label\">\r\n        Commits from {printDate(endDates[0])} to {printDate(endDates[1])}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommitGraphBox;\r\n","import React from \"react\";\r\nimport CommitGraphBox from \"./CommitGraphBox\";\r\n\r\n// <img\r\n//   src={`${process.env.PUBLIC_URL}/ProjectImages/${project.id}.png`}\r\n//   alt={project.id}\r\n// />\r\n\r\nclass ProjectCard extends React.Component {\r\n  render() {\r\n    const project = this.props;\r\n    return (\r\n      <div className=\"project-card\">\r\n        <div className=\"project-text col-9\">\r\n          <div className=\"project-title\">{project.name}</div>\r\n          <div className=\"project-description\">{project.description}</div>\r\n          <div className=\"project-gh-link\">\r\n            <a\r\n              href={`https://github.com/${project.github_owner}/${project.github_repo}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >{`https://github.com/${project.github_owner}/${project.github_repo}`}</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <CommitGraphBox {...project} />\r\n        </div>\r\n\r\n        <div className=\"project-tags col-12\">\r\n          {project.tags.map(tag => (\r\n            <span key={tag} className=\"project-tag\">\r\n              {tag}{\" \"}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport \"./ProjectCards.css\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nfunction ProjectCards() {\r\n  const projects = require(\"./projects.json\").items;\r\n  return (\r\n    <>\r\n      {projects.map(project => (\r\n        <ProjectCard key={project.id} {...project} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectCards;\r\n","import \"./App.css\";\r\nimport HeadingCard from \"./components/HeadingCard/HeadingCard\";\r\nimport ProjectCards from \"./components/ProjectCards/ProjectCards\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HeadingCard />\r\n      <ProjectCards />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}