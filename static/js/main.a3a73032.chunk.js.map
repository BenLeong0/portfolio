{"version":3,"sources":["components/HeadingCard/HeadingLinks.js","components/HeadingCard/HeadingCard.js","components/ProjectCards/CommitGraph.js","components/ProjectCards/CommitGraphBox.js","components/ProjectCards/LinkBox.js","components/ProjectCards/ProjectImage.js","components/ProjectCards/ProjectCard.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileButton","props","className","id","href","url","target","rel","width","height","viewBox","d","path","HeadingLinks","profiles","require","items","map","profile","HeadingCard","style","fontSize","CommitGraph","fill","diff","graphPoints","length","maxValue","i","points","x","stroke","strokeWidth","CommitGraphBox","useState","endDates","setEndDates","setGraphPoints","totalCommits","setTotalCommits","convertDay","date","Math","abs","updateGraph","data","endDate","Date","commit","author","slice","startDate","prevDate","currGraphPoints","commits","reverse","forEach","newDate","Array","push","printDate","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","useEffect","a","config","headers","accept","params","per_page","hasOwnProperty","until","axios","github_owner","github_repo","resp","fetchData","then","LinkBox","links","link","index","ProjectImage","src","process","alt","ProjectCard","project","this","name","description","paragraph","github_public","tags","tag","React","Component","App","projects","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3a73032.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Create array of profiles and iterate over them\r\n\r\nconst ProfileButton = props => (\r\n  <>\r\n    <div className=\"profile-col\">\r\n      <a\r\n        className=\"profile-link\"\r\n        id={props.id}\r\n        href={props.url}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\">\r\n          <path d={props.path} />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n  </>\r\n);\r\n\r\nfunction HeadingLinks() {\r\n  const profiles = require(\"./profiles.json\").items;\r\n\r\n  return (\r\n    <div id=\"heading-links\">\r\n      {profiles.map(profile => (\r\n        <ProfileButton key={profile.id} {...profile} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeadingLinks;\r\n","import React from \"react\";\r\nimport \"./HeadingCard.css\";\r\nimport HeadingLinks from \"./HeadingLinks\";\r\n\r\nfunction HeadingCard() {\r\n  return (\r\n    <>\r\n      <div id=\"heading-card\">\r\n        <div id=\"heading-title\">\r\n          <div style={{ fontSize: \"50px\" }}>Coding Portfolio</div>\r\n          <div style={{ fontSize: \"30px\" }}>Ben Leong</div>\r\n        </div>\r\n      </div>\r\n      <HeadingLinks />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeadingCard;\r\n","import React from \"react\";\r\n\r\nfunction CommitGraph(props) {\r\n  const fill = \"none\";\r\n  const stroke = \"black\";\r\n  const strokeWidth = 2;\r\n\r\n  const width = 370;\r\n  const height = 240;\r\n  const diff = width / props.graphPoints.length;\r\n  const maxValue = props.graphPoints[props.graphPoints.length - 1];\r\n  var i = -diff / 2;\r\n\r\n  const points = props.graphPoints.map(x => [\r\n    (i += diff),\r\n    (height / maxValue) * (maxValue - x)\r\n  ]);\r\n\r\n  if (fill !== \"none\") {\r\n    points.push([width - diff / 2, height]);\r\n  }\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`}>\r\n      <polyline\r\n        points={points}\r\n        fill={fill}\r\n        stroke={stroke}\r\n        strokeWidth={strokeWidth}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CommitGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport CommitGraph from \"./CommitGraph\";\r\n\r\nfunction CommitGraphBox(props) {\r\n  const [endDates, setEndDates] = useState([0, 0]);\r\n  const [graphPoints, setGraphPoints] = useState([0, 1]);\r\n  const [totalCommits, setTotalCommits] = useState(0);\r\n\r\n  const convertDay = date => {\r\n    return Math.abs(date) / 86400000 - 18500;\r\n  };\r\n\r\n  const updateGraph = data => {\r\n    const endDate = new Date(data[0].commit.author.date.slice(0, 10));\r\n    const startDate = new Date(\r\n      data[data.length - 1].commit.author.date.slice(0, 10)\r\n    );\r\n    setEndDates([startDate - 1, endDate]);\r\n\r\n    var prevDate = convertDay(startDate) - 1;\r\n    var currGraphPoints = [];\r\n    var commits = 0;\r\n\r\n    // .reverse since data is received newest-first\r\n    // then extract the date and update graph points\r\n    data.reverse().forEach(commit => {\r\n      var newDate = convertDay(\r\n        new Date(commit.commit.author.date.slice(0, 10))\r\n      );\r\n      if (newDate === prevDate) {\r\n        commits++;\r\n      } else {\r\n        currGraphPoints = [\r\n          ...currGraphPoints,\r\n          ...Array(newDate - prevDate).fill(commits)\r\n        ];\r\n        commits++;\r\n      }\r\n      prevDate = newDate;\r\n    });\r\n    currGraphPoints.push(commits);\r\n    setTotalCommits(commits);\r\n    setGraphPoints(currGraphPoints);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let config = {\r\n        headers: {\r\n          accept: \"application/vnd.github.v3+json\"\r\n        },\r\n        params: {\r\n          per_page: 100\r\n        }\r\n      };\r\n      // Add endDate parameter if present in json\r\n      if (props.hasOwnProperty(\"endDate\")) {\r\n        config.params.until = props.endDate;\r\n      }\r\n\r\n      const resp = await axios.get(\r\n        `https://api.github.com/repos/${props.github_owner}/${props.github_repo}/commits`,\r\n        config\r\n      );\r\n      return resp.data;\r\n    };\r\n\r\n    fetchData().then(updateGraph);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function printDate(d) {\r\n    const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\r\n    const mo = new Intl.DateTimeFormat(\"en\", { month: \"2-digit\" }).format(d);\r\n    const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\r\n    return `${ye}-${mo}-${da}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-graph\">\r\n      <CommitGraph\r\n        graphPoints={graphPoints}\r\n        setTotalCommits={setTotalCommits}\r\n      />\r\n      <div className=\"project-graph-label\">\r\n        Commits from {printDate(endDates[0])} to {printDate(endDates[1])}\r\n        <br />\r\n        Total commits: {totalCommits}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommitGraphBox;\r\n","import React from \"react\";\r\n\r\nfunction LinkBox(props) {\r\n  if (props.links.length === 0) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"project-link-box col-10\">\r\n      <div className=\"project-link-title col-1\">\r\n        <b>Links: </b>\r\n      </div>\r\n      <div className=\"project-links col-11\">\r\n        {props.links.map((link, index) => (\r\n          <div key={index} className=\"project-link\">\r\n            <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n              {link}\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkBox;\r\n","import React from \"react\";\r\n\r\nfunction ProjectImage(props) {\r\n  return (\r\n    <div className=\"project-image\">\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/\" + props.id + \"-img.png\"}\r\n        alt={props.id}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectImage;\r\n","import React from \"react\";\r\nimport CommitGraphBox from \"./CommitGraphBox\";\r\nimport LinkBox from \"./LinkBox\";\r\nimport ProjectImage from \"./ProjectImage\";\r\n\r\n// <img\r\n//   src={`${process.env.PUBLIC_URL}/ProjectImages/${project.id}.png`}\r\n//   alt={project.id}\r\n// />\r\n\r\nclass ProjectCard extends React.Component {\r\n  render() {\r\n    const project = this.props;\r\n    return (\r\n      <div className=\"project-card\">\r\n        <div className=\"project-text col-9\">\r\n          <div className=\"project-title\">{project.name}</div>\r\n          <div className=\"project-description\">\r\n            {project.description.map((paragraph, index) => {\r\n              return <p key={\"para\" + index}>{paragraph}</p>;\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-3\">\r\n          {project.github_public ? (\r\n            <CommitGraphBox {...project} />\r\n          ) : (\r\n            <ProjectImage {...project} />\r\n          )}\r\n        </div>\r\n\r\n        <LinkBox {...project} />\r\n        <div className=\"project-tags col-12\">\r\n          <span>Tags: </span>\r\n          {project.tags.map((tag, index) => (\r\n            <span key={tag} className=\"project-tag\">\r\n              {(index > 0 ? \" ; \" : \"\") + tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n","import \"./App.css\";\r\nimport \"./components/ProjectCards/ProjectCards.css\";\r\nimport HeadingCard from \"./components/HeadingCard/HeadingCard\";\r\nimport ProjectCard from \"./components/ProjectCards/ProjectCard\";\r\n\r\nfunction App() {\r\n  const projects = require(\"./components/ProjectCards/projects.json\").items;\r\n  return (\r\n    <div className=\"App\">\r\n      <HeadingCard />\r\n      {projects.map(project => (\r\n        <ProjectCard key={project.id} {...project} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}