{"version":3,"sources":["components/HeadingCard/HeadingLinks.js","components/HeadingCard/HeadingCard.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileButtons","props","profiles","map","profile","className","id","href","url","target","width","height","viewBox","d","path","HeadingLinks","require","items","HeadingCard","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"60DAIMA,G,iBAAiB,SAAAC,GAAK,OAC1B,mCACGA,EAAMC,SAASC,KAAI,SAAAC,GAAO,OACzB,qBAAKC,UAAU,cAAf,SACE,mBACEA,UAAU,eACVC,GAAIF,EAAQE,GACZC,KAAMH,EAAQI,IACdC,OAAO,SAJT,SAME,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApC,SACE,sBAAMC,EAAGT,EAAQU,oBAkBdC,MAVf,WACE,IAAMb,EAAWc,EAAQ,IAAmBC,MAE5C,OACE,qBAAKX,GAAG,gBAAR,SACE,cAAC,EAAD,CAAgBJ,SAAUA,OCVjBgB,MAdf,WACE,OACE,qCACE,qBAAKZ,GAAG,eAAR,SACE,sBAAKA,GAAG,gBAAR,UACE,qBAAKa,MAAO,CAAE,YAAa,QAA3B,8BACA,qBAAKA,MAAO,CAAE,YAAa,QAA3B,4BAGJ,cAAC,EAAD,QCFSC,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.689b593c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Create array of profiles and iterate over them\r\n\r\nconst ProfileButtons = props => (\r\n  <>\r\n    {props.profiles.map(profile => (\r\n      <div className=\"profile-col\">\r\n        <a\r\n          className=\"profile-link\"\r\n          id={profile.id}\r\n          href={profile.url}\r\n          target=\"_blank\"\r\n        >\r\n          <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\">\r\n            <path d={profile.path} />\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nfunction HeadingLinks() {\r\n  const profiles = require(\"./profiles.json\").items;\r\n\r\n  return (\r\n    <div id=\"heading-links\">\r\n      <ProfileButtons profiles={profiles} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeadingLinks;\r\n","import React from \"react\";\r\nimport \"./HeadingCard.css\";\r\nimport HeadingLinks from \"./HeadingLinks\";\r\n\r\nfunction HeadingCard() {\r\n  return (\r\n    <>\r\n      <div id=\"heading-card\">\r\n        <div id=\"heading-title\">\r\n          <div style={{ \"font-size\": \"50px\" }}>Coding Portfolio</div>\r\n          <div style={{ \"font-size\": \"30px\" }}>Ben Leong</div>\r\n        </div>\r\n      </div>\r\n      <HeadingLinks />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeadingCard;\r\n","import \"./App.css\";\r\nimport HeadingCard from \"./components/HeadingCard/HeadingCard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HeadingCard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}